<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width" />
        <title>@ViewBag.Title</title>
        @Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")
    </head>
    <body>
        <header>
            <div class="content-wrapper">
                <div class="float-left">
                    <p class="site-title">
                        <a href="~/">ASP.NET Web API</a></p>
                </div>
                <div class="float-right">
                    <nav>
                        <ul id="menu">
                            <li>@Html.ActionLink("Home", "Index", "Home", new { area = "" }, null)</li>
                            <li>@Html.ActionLink("API", "Index", "Help", new { area = "" }, null)</li>
                        </ul>
                    </nav>
                </div> 
            </div>
        </header>
        @Scripts.Render("~/Scripts/underscore-min.js")
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/Scripts/backbone-min.js")

        @RenderBody()

 
        @RenderSection("scripts", required: false)
         
        <script type="text/javascript">
 
           // var WellcomeImage = Backbone.Model.extend({ urlRoot: '/api/Image/GetWellcomeImage' });
            var About = Backbone.Model.extend({ urlRoot: '/api/About' });
            var Albom = Backbone.Model.extend({ urlRoot: '/api/Albom' });
            var AlbomeCollection = Backbone.Collection.extend({ url: '/api/Albom' });
          
            var about = new About();
            
            var serializeObject = function (arr) {
                var o = {};
                var a = arr.serializeArray();
                $.each(a, function () {
                    if (o[this.name] != undefined) {
                        if (!o[this.name].push) {
                            o[this.name] = [o[this.name]];
                        }
                        o[this.name].push(this.value || '');
                    } else {
                        o[this.name] = this.value || '';
                    }
                });

                return o;
            };
            
            var Router = Backbone.Router.extend({
                routes: {
                    '': 'home',
                    'about': 'about',
                    'about/edit': 'editAbout',

                    'library': 'library',
                    'library/:id': 'library',

                    'alboms': 'alboms',
                    'alboms/:id': 'albom',
                    'alboms/edit/:id': 'editAlbom',
                    'alboms/new': 'editAlbom',
                    'alboms/:albName/:imgId': 'image',
                }
            });

            var HomeView = Backbone.View.extend({
                el: '.page',
                render: function () {
                    // $.ajaxPrefilter(function (options, originalOptions, jqXHR) { options.url = "http://localhost:59397" + options.urlRoot; });

                    // var wellcome = new WellcomeImage();
                    var that = this; 
                    Navigate(that.$el, '#template-home', {});
                }
            });
            
            // About 
            var AboutView = Backbone.View.extend({ 
                el: '.page',
                render: function () {
                    // $.ajaxPrefilter(function (options, originalOptions, jqXHR) { options.url = "http://localhost:59397" + options.urlRoot; });

                    var about = new About();
                    var that = this;
                    about.fetch({
                        success: function () { 
                            this.Navigate(that.$el, '#template-about', { about: about });
                        }
                    });
                } 
            });
            
            var EditAboutView = Backbone.View.extend({
                el: '.page',
                render: function () {

                    var about = new About();
                    var that = this;
                    about.fetch({
                        success: function () {
                            this.Navigate(that.$el, '#template-editAbout', { about: about });
                        }
                    });
                },

                events: { 'submit .editAboutForm': 'saveAbout' },

                saveAbout: function (ev) {

                    var about = new About();
                    console.log($(ev));
                    console.log(ev);
                    console.log($(ev.currentTarget));
                    var userData = serializeObject($(ev.currentTarget));
                    console.log(userData);
                    about.save(userData, {
                        success: function () {
                            router.navigate('about', { trigger: true });
                        }
                    });
                    return false;
                },
            });
            
            // Alboms
            var AlbomView = Backbone.View.extend({
                el: '.page',
                render: function (id) {
                    // $.ajaxPrefilter(function (options, originalOptions, jqXHR) { options.url = "http://localhost:59397" + options.urlRoot; });

                    var albom = new Albom({ Id: id });
                    var that = this;
                    albom.fetch({
                        success: function () {
                            this.Navigate(that.$el, '#template-alboms', { albom: albom });
                        }
                    });

                }
            });

            // Alboms
            var AlbomsView = Backbone.View.extend({
                el: '.page',
                render: function () {
                    // $.ajaxPrefilter(function (options, originalOptions, jqXHR) { options.url = "http://localhost:59397" + options.urlRoot; });

                    var alboms = new AlbomeCollection();
                    var that = this;
                    alboms.fetch({
                        success: function () {
                            this.Navigate(that.$el, '#template-alboms', { alboms: alboms.models });
                        }
                    }); 
                },
                
                events: { 'click .albomBox': 'openAlbom' },
                
                openAlbom: function() {
                    console.log($(this));
                    router.navigate('alboms/' + this.$("albomBox").attr("albomId"), { trigger: true });
                }
            });
            
            var EditAlbomView = Backbone.View.extend({
                el: '.page',
                render: function (id) {

                    var albom = new Albom({Id:id});
                    var that = this;
                    albom.fetch({
                        success: function () {
                            this.Navigate(that.$el, '#template-editAlbom', { albom: albom });
                        }
                    });
                },

                events: { 'submit .editAboutForm': 'saveAbout' },

                saveAbout: function (ev) {

                    var about = new About();
                    console.log($(ev));
                    console.log(ev);
                    console.log($(ev.currentTarget));
                    var userData = serializeObject($(ev.currentTarget));
                    console.log(userData);
                    about.save(userData, {
                        success: function () {
                            router.navigate('about', { trigger: true });
                        }
                    });
                    return false;
                },
            });
             
            var Navigate = function(el, templ, object) {
                var template = _.template($(templ).html(), object);
                el.html(template);
            };
             
            var homeView = new HomeView();
            var aboutView = new AboutView();
            var editAboutView = new EditAboutView();
            var albomsView = new AlbomsView();
            var albomView = new AlbomView();
            var editAlbomView = new EditAlbomView();

            var router = new Router();

            router.on('route:home', function () {
                homeView.render();
            });
            router.on('route:about', function () {
                aboutView.render();
            });
            router.on('route:editAbout', function () { 
                editAboutView.render();
            });
            router.on('route:editAbout', function () {
                editAlbomView.render();
            });
            router.on('route:albom', function (id) {
                albomView.render(id);
            });
            router.on('route:alboms', function (id) {
                albomsView.render(id);
            });


            Backbone.history.start();

        </script>

    </body>
</html>


